#!/usr/bin/env bash
# tymer manager
########################################################
VERSION=0.1.0
IFS=$'\n'
TYMERS_DIR=~/.tymer
TYMERS_FILE=~/.tymer/tymers.txt

CURRENT_TIME=$(date)
CURRENT_TIME_SEC=$(date +%s)
FUTURE_TIME=$(date -v +20M)
FUTURE_TIME_SEC=$(date -v +20M +%s)

DEFAULT_TYME="+20M"
DEFAULT_DESC="No Description"

# variables
whichMethod=$1
########################################################
# check if database file exists, if not, create it
if [ ! -f $TYMERS_FILE ]; then
  mkdir -p $TYMERS_DIR
  touch $TYMERS_FILE
fi

# helper functions
########################################################
# convert seconds into readable time
convertsecs() {
  ((h=${1}/3600))
  ((m=(${1}%3600)/60))
  ((s=${1}%60))
  printf "%02d:%02d:%02d\n" $h $m $s
}

########################################################
# list tymers in a readable format
function listTymers() {

  while read p; do
    seconds=`echo $p | sed 's/:.*//'`
    human_readable_time=`echo $p | sed 's/[^:]*://'`
    human_readable_time=`echo $human_readable_time | sed 's/=.*//'`
    current_tymer_desc=`echo $p | sed 's/[^=].*=//'`
    time_left=$((seconds - CURRENT_TIME_SEC))
    time_left=$(convertsecs $time_left)

    printf "$current_tymer_desc\t$human_readable_time\t$time_left\n"
  done< $TYMERS_FILE
}

########################################################
# add a tymer with a date arg
# save tymer to database file
function addTymer() {

  FUTURE_TIME=$(date -v $TYMER_LENGTH)
  FUTURE_TIME_SEC=$(date -v $TYMER_LENGTH +%s)

  printf "Creating New Tymer:\n"
  printf "\t"$TYMER_DESC"\n"
  printf "\t"$FUTURE_TIME"\n"
  printf "\t"$TYMER_LENGTH"\n"

  echo $FUTURE_TIME_SEC:$FUTURE_TIME=$TYMER_DESC >> $TYMERS_FILE
}

########################################################
# delete line from database file
function deleteTymer() {
  line=$1
  sed -i '' "\:$line:d" $TYMERS_FILE
}

########################################################
function checkTymers() {
  # check each line of the file and compare to current time
  while read p; do
    seconds=`echo $p | sed 's/:.*//'`
    human_readable_time=`echo $p | sed 's/[^:]*://'`
    human_readable_time=`echo $human_readable_time | sed 's/=.*//'`
    current_tymer_desc=`echo $p | sed 's/[^=].*=//'`
    # if tymer is older than now
    if [[ $seconds -lt $CURRENT_TIME_SEC ]]; then
      echo "######################################################"
      echo $seconds
      echo $human_readable_time
      echo $current_tymer_desc
      # send notification
      notifier $current_tymer_desc $human_readable_time
      # delete the tymer
      deleteTymer $seconds
    fi
  done < $TYMERS_FILE
}

########################################################
# use terminal-notifier to send notifications
function notifier() {
  /usr/local/bin/terminal-notifier -title 'Tymer' -subtitle "$2" -message "$1"': Tymer has finished!'  -sound 'Ping'
}



function loop(){
  while true; do

    clear

    CURRENT_TIME=$(date)
    CURRENT_TIME_SEC=$(date +%s)

    listTymers | column -ts $'\t'

    sleep 1
    tput cuu1
    tput el
    tput cuu1
    tput el
  done
}


########################################################
# check which function should run
case $whichMethod in
  list     ) listTymers ;;
  ls       ) listTymers | column -ts $'\t' ;;
  add      ) TYMER_DESC=${2:-$DEFAULT_DESC}; TYMER_LENGTH=${3:-$DEFAULT_TYME}; addTymer ;;
  check    ) checkTymers ;;
  loop     ) loop ;;
  *        ) checkTymers ;;
esac
########################################################



